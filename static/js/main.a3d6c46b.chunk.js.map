{"version":3,"sources":["api/jsonPlaceholder.js","actions/index.js","components/UserHeader/UserHeader.js","components/PostList/PostList.js","components/App/App.js","reducers/posts.js","reducers/users.js","reducers/index.js","index.js"],"names":["axios","create","baseURL","fetchPosts","dispatch","getState","a","jsonPlaceholder","get","res","type","payload","data","fetchUser","id","UserHeader","user","this","props","className","name","Component","connect","state","ownProps","users","find","userId","PostList","fetchPostsAndUsers","posts","map","post","title","body","renderList","_","chain","uniq","forEach","value","App","action","combineReducers","ReactDOM","render","store","createStore","reducers","applyMiddleware","thunk","document","querySelector"],"mappings":"qQAEeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,0C,iBCUEC,EAAa,yDAAM,WAAOC,EAAUC,GAAjB,eAAAC,EAAA,sEACZC,EAAgBC,IAAI,UADR,OACxBC,EADwB,OAG9BL,EAAS,CAAEM,KAAM,cAAeC,QAASF,EAAIG,OAHf,2CAAN,yDAMbC,EAAY,SAAAC,GAAE,8CAAI,WAAMV,GAAN,eAAAE,EAAA,sEACXC,EAAgBC,IAAhB,iBAA8BM,IADnB,OACvBL,EADuB,OAG7BL,EAAS,CAAEM,KAAM,aAAcC,QAASF,EAAIG,OAHf,2CAAJ,uDChBrBG,E,uKACM,IACAC,EAASC,KAAKC,MAAdF,KAER,OAAKA,EACE,qBAAKG,UAAU,SAAf,SAAyBH,EAAKI,OADnB,S,GAJGC,aAaVC,eAJQ,SAACC,EAAOC,GAC7B,MAAO,CAAER,KAAMO,EAAME,MAAMC,MAAK,SAAAV,GAAI,OAAIA,EAAKF,KAAOU,EAASG,aAGhDL,CAAwBP,GCXjCa,E,kLAEFX,KAAKC,MAAMW,uB,mCAIX,OAAOZ,KAAKC,MAAMY,MAAMC,KAAI,SAAAC,GAC1B,OACE,sBAAKb,UAAU,OAAf,UACE,mBAAGA,UAAU,mCACb,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,cAAf,UACE,6BAAKa,EAAKC,QACV,4BAAID,EAAKE,UAEX,cAAC,EAAD,CAAYP,OAAQK,EAAKL,cAPFK,EAAKlB,S,+BAepC,OAAO,qBAAKK,UAAU,0BAAf,SAA0CF,KAAKkB,mB,GAvBnCd,aA+BRC,eAJS,SAAAC,GACtB,MAAO,CAAEO,MAAOP,EAAMO,SAGgB,CAAED,mBFjCR,yDAAM,WAAOzB,EAAUC,GAAjB,SAAAC,EAAA,sEAChCF,EAASD,KADuB,OAGtCiC,IAAEC,MAAMhC,IAAWyB,OAChBC,IAAI,UACJO,OACAC,SAAQ,SAAAzB,GAAE,OAAIV,EAASS,EAAUC,OACjC0B,QAPmC,2CAAN,0DEiCnBlB,CAAiDM,GCzBjDa,EARH,WACV,OACE,qBAAKtB,UAAU,eAAf,SACE,cAAC,EAAD,OCGSW,EATD,WAAyB,IAAxBP,EAAuB,uDAAf,GAAImB,EAAW,uCACpC,OAAQA,EAAOhC,MACb,IAAK,cACH,OAAOgC,EAAO/B,QAChB,QACE,OAAOY,I,QCIEP,EATF,WAAyB,IAAxBO,EAAuB,uDAAf,GAAImB,EAAW,uCACnC,OAAQA,EAAOhC,MACb,IAAK,aACH,MAAM,GAAN,mBAAWa,GAAX,CAAkBmB,EAAO/B,UAC3B,QACE,OAAOY,ICDEoB,cAAgB,CAC7Bb,QACAL,UCGFmB,IAASC,OACP,cAAC,IAAD,CAAUC,MAAOC,YAAYC,EAAUC,YAAgBC,MAAvD,SACE,cAAC,EAAD,MAEFC,SAASC,cAAc,Y","file":"static/js/main.a3d6c46b.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://jsonplaceholder.typicode.com/',\n});\n","import jsonPlaceholder from '../api/jsonPlaceholder';\nimport _ from 'lodash';\n\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\n  await dispatch(fetchPosts());\n\n  _.chain(getState().posts)\n    .map('userId')\n    .uniq()\n    .forEach(id => dispatch(fetchUser(id)))\n    .value();\n};\n\nexport const fetchPosts = () => async (dispatch, getState) => {\n  const res = await jsonPlaceholder.get('/posts');\n\n  dispatch({ type: 'FETCH_POSTS', payload: res.data });\n};\n\nexport const fetchUser = id => async dispatch => {\n  const res = await jsonPlaceholder.get(`/users/${id}`);\n\n  dispatch({ type: 'FETCH_USER', payload: res.data });\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass UserHeader extends Component {\n  render() {\n    const { user } = this.props;\n\n    if (!user) return null;\n    return <div className=\"header\">{user.name}</div>;\n  }\n}\n\nconst mapStateTPtops = (state, ownProps) => {\n  return { user: state.users.find(user => user.id === ownProps.userId) };\n};\n\nexport default connect(mapStateTPtops)(UserHeader);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPostsAndUsers } from '../../actions';\nimport UserHeader from '../UserHeader/UserHeader';\n\nclass PostList extends Component {\n  componentDidMount() {\n    this.props.fetchPostsAndUsers();\n  }\n\n  renderList() {\n    return this.props.posts.map(post => {\n      return (\n        <div className=\"item\" key={post.id}>\n          <i className=\"large middle aligned icon user\" />\n          <div className=\"content\">\n            <div className=\"description\">\n              <h2>{post.title}</h2>\n              <p>{post.body}</p>\n            </div>\n            <UserHeader userId={post.userId} />\n          </div>\n        </div>\n      );\n    });\n  }\n\n  render() {\n    return <div className=\"ui relaxed divided list\">{this.renderList()}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return { posts: state.posts };\n};\n\nexport default connect(mapStateToProps, { fetchPostsAndUsers })(PostList);\n","import React from 'react';\nimport PostList from '../PostList/PostList';\n\nconst App = () => {\n  return (\n    <div className=\"ui container\">\n      <PostList />\n    </div>\n  );\n};\n\nexport default App;\n","const posts = (state = [], action) => {\n  switch (action.type) {\n    case 'FETCH_POSTS':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default posts;\n","const user = (state = [], action) => {\n  switch (action.type) {\n    case 'FETCH_USER':\n      return [...state, action.payload];\n    default:\n      return state;\n  }\n};\n\nexport default user;\n","import { combineReducers } from 'redux';\nimport posts from './posts';\nimport users from './users';\n\nexport default combineReducers({\n  posts,\n  users,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport App from './components/App/App';\nimport reducers from './reducers';\n\nReactDOM.render(\n  <Provider store={createStore(reducers, applyMiddleware(thunk))}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}